@prefix noid: <https://github.com/nclack/noid/schemas/transforms/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

# SHACL validation shapes for NOID transform vocabulary
# These shapes define semantic constraints for coordinate transformations

# Translation Transform Shape
noid:TranslationShape
    a sh:NodeShape ;
    sh:targetClass noid:translation ;
    rdfs:label "Translation Transform Shape" ;
    rdfs:comment "Validates translation transforms with required translation vector" ;
    sh:property [
        sh:path noid:translation ;
        sh:name "translation vector" ;
        sh:description "Translation vector as array of numeric values" ;
        sh:minCount 1 ;
        sh:nodeKind sh:Literal ;
    ] .

# Scale Transform Shape  
noid:ScaleShape
    a sh:NodeShape ;
    sh:targetClass noid:scale ;
    rdfs:label "Scale Transform Shape" ;
    rdfs:comment "Validates scale transforms with required scale factors" ;
    sh:property [
        sh:path noid:scale ;
        sh:name "scale factors" ;
        sh:description "Scale factors as array of numeric values" ;
        sh:minCount 1 ;
        sh:nodeKind sh:Literal ;
    ] .

# Matrix-based Transform Shape (for homogeneous and rotation)
noid:MatrixTransformShape
    a sh:NodeShape ;
    sh:targetClass noid:homogeneous, noid:rotation ;
    rdfs:label "Matrix Transform Shape" ;
    rdfs:comment "Validates matrix-based transforms with required transformation matrix" ;
    sh:property [
        sh:path noid:matrix ;
        sh:name "transformation matrix" ;
        sh:description "Transformation matrix as array of arrays of numeric values" ;
        sh:minCount 1 ;
        sh:nodeKind sh:Literal ;
    ] .

# Map Axis Transform Shape
noid:MapAxisShape
    a sh:NodeShape ;
    sh:targetClass noid:mapAxis ;
    rdfs:label "Map Axis Transform Shape" ;
    rdfs:comment "Validates axis mapping transforms with required axis mappings" ;
    sh:property [
        sh:path noid:mapAxis ;
        sh:name "axis mappings" ;
        sh:description "Mapping between input and output axes as key-value pairs" ;
        sh:minCount 1 ;
        sh:nodeKind sh:BlankNodeOrIRI ;
    ] .

# Coordinates Transform Shape
noid:CoordinatesShape
    a sh:NodeShape ;
    sh:targetClass noid:coordinates ;
    rdfs:label "Coordinates Transform Shape" ;
    rdfs:comment "Validates explicit coordinate mapping transforms" ;
    sh:property [
        sh:path noid:coordinates ;
        sh:name "coordinate mappings" ;
        sh:description "Explicit coordinate value mappings" ;
        sh:minCount 1 ;
        sh:nodeKind sh:BlankNodeOrIRI ;
    ] .

# Displacements Transform Shape
noid:DisplacementsShape
    a sh:NodeShape ;
    sh:targetClass noid:displacements ;
    rdfs:label "Displacements Transform Shape" ;
    rdfs:comment "Validates displacement field transforms" ;
    sh:property [
        sh:path noid:displacements ;
        sh:name "displacement field" ;
        sh:description "Reference to displacement field data" ;
        sh:minCount 1 ;
        sh:nodeKind sh:BlankNodeOrIRI ;
    ] .

# Identity Transform Shape (no additional properties required)
noid:IdentityShape
    a sh:NodeShape ;
    sh:targetClass noid:identity ;
    rdfs:label "Identity Transform Shape" ;
    rdfs:comment "Validates identity transforms (no additional properties required)" .