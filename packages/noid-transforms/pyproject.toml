[project]
name = "noid-transforms"
version = "0.1.0"
description = "A LinkML-based Python library for coordinate transformations"
readme = "README.md"
authors = [
    { name = "Nathan Clack", email = "nclack@chanzuckerberg.com" }
]
requires-python = ">=3.10"
dependencies = [
    "linkml>=1.9.2",
    "linkml-runtime>=1.9.2",
    "jsonasobj2>=1.0.0",
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0",
    "noid-registry",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.optional-dependencies]
# Minimal dev dependencies - uv can run most tools directly
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/nclack/noid"
Repository = "https://github.com/nclack/noid"
Issues = "https://github.com/nclack/noid/issues"
Documentation = "https://github.com/nclack/noid/tree/main/transforms"

[project.scripts]
noid-transforms-check = "noid_transforms.scripts:check_main"
noid-transforms-build = "noid_transforms.scripts:build_main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/noid_transforms"]

[tool.hatch.build.targets.sdist]
include = [
    "src/noid_transforms/**/*.py",
    "transforms.linkml.yaml",
    "samplers.linkml.yaml",
    "build.py",
    "README.md",
    "LICENSE",
]

[tool.ruff]
line-length = 88
target-version = "py310"
extend-exclude = [
    "_out/**/*",
    "_old/**/*",
]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "C4",   # flake8-comprehensions
    "B",    # flake8-bugbear
    "ANN",  # flake8-annotations (type annotations)
]
ignore = [
    "E501",    # Line length handled by formatter
    "ANN401",  # Dynamically typed expressions (Any) - allow when needed
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "ANN001",  # Missing type annotation for function argument
    "ANN201",  # Missing return type annotation for public function
    "ANN202",  # Missing return type annotation for private function
    "B011",    # Don't use assert False in tests (it's fine in tests)
]

[tool.ruff.lint.isort]
combine-as-imports = true
force-single-line = false
known-first-party = ["noid_transforms"]
force-sort-within-sections = true
split-on-trailing-comma = false

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# Simplified pytest config - most defaults are fine
[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = ["-v", "--strict-markers"]

# Minimal coverage config
[tool.coverage.run]
source = ["src/transforms"]
omit = ["*/tests/*", "*/_out/*", "*/_old/*"]

[dependency-groups]
dev = [
    "ruff>=0.12.4",
    "pre-commit>=3.0.0",
]

# Note: uv scripts didn't work as expected in uv 0.7.19
# Using tasks.py as the task runner instead


[tool.uv.sources]
noid-registry = { workspace = true }
